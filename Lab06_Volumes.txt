Bind Volumes:

1. Crear una carpeta dentro de algun directorio del host. Por ejemplo es conveniente en la
home del usuario, o ver en el docker for win/Mac donde hay file sharing.
2.Crear un directorio llamado volumen, otro interno al mismo llamado carpeta y dentro del
ultimo crear un archivo.txt
En el caso Windows es conveniente sea del tipo (usar tu nombre de usuario):
/c/Users/dchavez/volumen/carpeta
3. Ejecutar:
docker run -v /c/Users/dchavez/volumen/carpeta:/container/carpeta -i -t ubuntu  /bin/bash
En el caso Docker for Windows aparecer‡ una ventana preguntando si permitimos compartir una carpeta, darle OK.
4. En la terminal devuelta ejecutar:
cd /container/carpeta/
ls
Que se observa?
5. Ejecutar:
touch archivo2.txt
6. Ver en el file system del Host. Que se observa?
7. Apagar y borrar los contenedores. 


Named Volumes:
1. Crear un container con un volumen: 
docker container run -dit --name pruebavol --mount source=volumen,target=/vol alpine
2. Ver si se creo el volumen:
docker volume ls
3. Inspeccionarlo y ver donde se guardan los datos del volumen:
docker volume inspect volumen
Aclaración: 
Si docker está dentro de una vm se verá: /mnt/sda1/var/lib/docker/volumes/volumen/_data
Si es Docker for Windows en modo "Windows Containers": C:\\ProgramData\\Docker\\volumes\\myvol\\_data
Si está ejecutandose nativamente (Linux): /var/lib/docker/volumes/volumen/_data
Este último tambien se verá en una VM
4. Ver el contenido del volumen:

En docker for win y Mac conectarse al host con:
docker run -it --rm --privileged --pid=host justincormack/nsenter1
ls /var/lib/docker/volumes/volumen/_data
salir con exit.
5. Entrar al contenedor creado:
docker container exec -it pruebavol sh
6. Crear un archivo:
echo "Hola Volumen" > /vol/file1
cat /vol/file1
7. Abrir otra Terminal. Ver el contenido generado en el docker host.

cat /var/lib/docker/volumes/volumen/_data/file1

Ver con:
docker run -it --rm --privileged --pid=host justincormack/nsenter1
Y probar:
cat /var/lib/docker/volumes/volumen/_data/file1
Salir con exit

8. Borrar el container creado:
docker container stop pruebavol
docker container rm pruebavol
9. Crear otro contenedor que use el mismo volumen:
docker container run -dit --name pruebavolubuntu --mount source=volumen,target=/vol ubuntu
10. Ver el contenido del archivo:
docker container exec -it pruebavolubuntu sh
cat /vol/file1
11. Que sucedio?
12. Borrar containers, imagenes y tmb el volumen, que no se borra si no lo pedimos explícitamente:
docker volume rm volumen
